<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAB9AAAAPoCAMAAACxgJWYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACslBMVEWeDR03BQoAAADOESbFNESzgYap
        qanZSFjywMX////PGCzQGy/fZHLhbHnzwsj0y8/VMUP//v7XPU7okJrqmKHPFSn66Or88PHQGi/eXmzf
        ZnPxvMLzxMnULD/+/PzWN0nniZTpkpvOEyj54+X77O7cV2beYG7wtbzyv8TTJzr++vvVMkTlg47njJbO
        Eif43eD66evPFirbUGDdWmjur7bwuL7SJDf++PnULUDkfYnmhpD32dz55ObPFCnaS1vcU2LtqbHvsrjR
        IDT99vb++/zTKDvjd4Plf4r20tb43uHZRFXaTVzaTl3UMELsoqrurLPZRlf43+LaSVnQHDD88/T++frS
        JTjWOUvlgIv0yM376+3tqLDicH3keoXwtr3TKz799fb99/f1ztP32t3RITT88fLVNEbniJP//f31z9TW
        OErXPE3ZR1fUL0Hpk5zQGS754uXrnKXtpa376uzRHzPfZXP77e/QHTH87/HQGC365ujhb3zzx8z9+Pjj
        eYTTKTzganfic3/SIzbYQFHYQVH21NjaTFztpq754OProKjdWWjWNkj32NvvsbjSJjr88vP87vDvsLfg
        aXbplp/rn6fVM0XPFyv99PXojZf54eTlgo30zNDeX2310NTXPk/uq7LSJjnULkDmiJL43N/65efxvcP0
        ys7YQ1TRIjX319reXm3xusDplqDkfIjbT17ywcfXO0zzxcr0yc7uqrLTKj3cVWT65+ngZ3TRHjL76uv1
        zdHwt73cVGPdWGfjeITqmqPspKzaSlrVNEX31trYQlL1ztLbUmLvs7rjdoLrnqbokZvmh5HojpjdW2nx
        u8H209fXP1D20dXvsrnkeobicn7ni5XhbnveXWvrnabbUWHYQlPZRVbWOkv43ODFPkm0oJWq076eKSs3
        XjcAej2bKywzYDcgppgFAAAAB3RJTUUH4wEEEQ4Cg2/4jgAAIwBJREFUeF7t3fufbWdd2HHaaUsmAuaQ
        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
        qo7UJ1+mAAAAAElFTkSuQmCC
</value>
  </data>
</root>